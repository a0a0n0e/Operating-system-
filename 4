#include <stdio.h>

struct Process {
    int id;          // Process ID
    int arrivalTime; // Arrival time of the process
    int burstTime;   // Burst time of the process
};

void executeProcess(struct Process *p) {
    // Simulate the execution of the process
    printf("Executing Process %d for %d units of time\n", p->id, p->burstTime);
}

int main() {
    struct Process processes[] = {
        {1, 0, 5},
        {2, 1, 3},
        {3, 2, 8},
        {4, 3, 2}
    };

    int n = sizeof(processes) / sizeof(processes[0]);
    
    // Sort the processes by their burst time in ascending order
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (processes[i].burstTime > processes[j].burstTime) {
                // Swap the processes
                struct Process temp = processes[i];
                processes[i] = processes[j];
                processes[j] = temp;
            }
        }
    }

    printf("Process\tBurst Time\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\n", processes[i].id, processes[i].burstTime);
    }

    printf("Executing processes in order of smallest burst time:\n");
    for (int i = 0; i < n; i++) {
        executeProcess(&processes[i]);
    }

    return 0;
}
