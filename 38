#include <stdio.h>
#include <stdlib.h>

int main() {
    int totalRequests, currentPosition, maxCylinder;
    printf("Enter the total number of disk requests: ");
    scanf("%d", &totalRequests);
    int requests[totalRequests];

    printf("Enter the current disk head position: ");
    scanf("%d", &currentPosition);

    printf("Enter the maximum cylinder (end of disk): ");
    scanf("%d", &maxCylinder);

    printf("Enter the disk request queue:\n");
    for (int i = 0; i < totalRequests; i++) {
        scanf("%d", &requests[i]);
    }

    int totalSeekTime = 0;

    // Sort requests in ascending order
    for (int i = 0; i < totalRequests - 1; i++) {
        for (int j = 0; j < totalRequests - i - 1; j++) {
            if (requests[j] > requests[j + 1]) {
                int temp = requests[j];
                requests[j] = requests[j + 1];
                requests[j + 1] = temp;
            }
        }
    }

    // SCAN Algorithm
    int direction = 1; // 1 for moving towards higher cylinders, -1 for lower cylinders
    int currentIndex = 0;

    while (currentIndex < totalRequests) {
        if (requests[currentIndex] >= currentPosition) {
            direction = 1;
        } else {
            direction = -1;
        }

        while (currentIndex < totalRequests && requests[currentIndex] * direction < currentPosition * direction) {
            currentIndex++;
        }

        if (currentIndex < totalRequests) {
            totalSeekTime += abs(currentPosition - requests[currentIndex]);
            currentPosition = requests[currentIndex];
        } else if (direction == 1) {
            currentPosition = maxCylinder;
        } else if (direction == -1) {
            currentPosition = 0;
        }
    }

    printf("Total seek time: %d\n", totalSeekTime);

    return 0;
}
