#include <stdio.h>

struct Process {
    int id;          // Process ID
    int burstTime;   // Burst time of the process
};

int main() {
    struct Process processes[] = {
        {1, 6},
        {2, 8},
        {3, 7},
        {4, 3}
    };

    int n = sizeof(processes) / sizeof(processes[0]);
    int timeQuantum = 2;
    int remainingTime[n];

    for (int i = 0; i < n; i++) {
        remainingTime[i] = processes[i].burstTime;
    }

    int currentTime = 0;
    int done = 0;

    printf("Executing processes using Round Robin:\n");

    while (!done) {
        done = 1;

        for (int i = 0; i < n; i++) {
            if (remainingTime[i] > 0) {
                done = 0;

                int executeTime = (remainingTime[i] > timeQuantum) ? timeQuantum : remainingTime[i];

                printf("Executing Process %d for %d units of time\n", processes[i].id, executeTime);

                remainingTime[i] -= executeTime;
                currentTime += executeTime;
            }
        }
    }

    return 0;
}
