#include <stdio.h>

// Define a structure to represent a process
struct Process {
    int id;          // Process ID
    int priority;    // Priority of the process (lower value means higher priority)
    int burstTime;   // Burst time of the process
};

int main() {
    // Create an array of processes
    struct Process processes[] = {
        {1, 3, 5},
        {2, 1, 3},
        {3, 2, 8},
        {4, 4, 2}
    };

    int n = sizeof(processes) / sizeof(processes[0]);

    // Sort the processes by priority (lower priority number means higher priority)
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (processes[i].priority > processes[j].priority) {
                // Swap the processes
                struct Process temp = processes[i];
                processes[i] = processes[j];
                processes[j] = temp;
            }
        }
    }

    printf("Executing processes in order of highest priority:\n");
    for (int i = 0; i < n; i++) {
        printf("Executing Process %d (Priority: %d, Burst Time: %d)\n", processes[i].id, processes[i].priority, processes[i].burstTime);
        // Simulate the execution of the process here
    }

    return 0;
}
