#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>

#define N 5 // Number of philosophers

sem_t forks[N];

void *philosopher(void *arg) {
    int philo_id = *((int *)arg);
    int left = philo_id;
    int right = (philo_id + 1) % N;

    while (1) {
        printf("Philosopher %d is thinking\n", philo_id);

        // Pickup the forks
        sem_wait(&forks[left]);
        sem_wait(&forks[right]);

        printf("Philosopher %d is eating\n", philo_id);

        // Put down the forks
        sem_post(&forks[left]);
        sem_post(&forks[right]);
    }
}

int main() {
    pthread_t philosophers[N];
    int philo_ids[N];

    for (int i = 0; i < N; i++) {
        sem_init(&forks[i], 0, 1);
        philo_ids[i] = i;
        pthread_create(&philosophers[i], NULL, philosopher, &philo_ids[i]);
    }

    for (int i = 0; i < N; i++) {
        pthread_join(philosophers[i], NULL);
    }

    return 0;
}

